/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   src/ClientCertificatesPanel.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {LitElement, html} from 'lit-element';

import {ClientCertificatesConsumerMixin} from '@advanced-rest-client/client-certificates-consumer-mixin/client-certificates-consumer-mixin.js';

export {ClientCertificatesPanel};

declare namespace UiElements {

  /**
   * A view that renders list of cliet certificates installed in the application.
   *
   * It allows to preview certificate details, add new certificate, and
   * to remove certificate from the store.
   *
   * The element uses web events to communicate with the data store. Your application
   * can have own implementation but we suggest using `@advanced-rest-client/arc-models`
   * with `client-certificate-model` to store certificates in browser's internal
   * data store.
   * Consider this when 3rd party scripts runs on your page.
   */
  class ClientCertificatesPanel {

    /**
     * Enables outlined theme.
     */
    outlined: boolean|null|undefined;

    /**
     * Enables compatibility with Anypoint components.
     */
    compatibility: boolean|null|undefined;

    /**
     * When set a certificate details dialog is opened.
     */
    certDetailsOpened: boolean|null|undefined;

    /**
     * An ID of the certificate to be passed on the details view element.
     */
    openedDetailsId: string|null|undefined;
    _page: number|null|undefined;

    /**
     * Indicates that the export options panel is currently rendered.
     */
    _exportOptionsOpened: boolean|null|undefined;
    _exportOptions: object|null|undefined;

    /**
     * Handles an exception by sending exception details to GA.
     *
     * @param message A message to send.
     */
    _handleException(message: String|null): void;
    _deleteCertDetails(): void;

    /**
     * Handler for `accept` event dispatched by export options element.
     *
     * @returns Result of calling `_doExportItems()`
     */
    _acceptExportOptions(e: CustomEvent|null): Promise<any>|null;
    _cancelExportOptions(): void;

    /**
     * Calls `_dispatchExportData()` from requests lists mixin with
     * prepared arguments
     *
     * @param detail Export configuration
     */
    _doExportItems(detail: String|null): Promise<any>|null;

    /**
     * Dispatches `arc-data-export` event and returns it.
     *
     * @param items List of items to export.
     */
    _dispatchExportData(items: Array<object|null>|Boolean|null, opts: object|null): CustomEvent|null;

    /**
     * Menu item handler to export all data to file
     *
     * @returns Result of calling `_doExportItems()`
     */
    _exportAllFile(): Promise<any>|null;

    /**
     * Menu item handler to export all data to file
     */
    openExportAll(): void;
    _deselectMainMenu(): void;

    /**
     * Handler for delete all menu option click
     */
    _deleteAllClick(): void;

    /**
     * Called when delete datastore dialog is closed.
     */
    _onClearDialogResult(e: any): void;

    /**
     * Opens an empty cookie editor.
     */
    addCertificate(): void;

    /**
     * Generates file name for the export options panel.
     */
    _generateFileName(): String|null;
    _cancelImport(): void;
    _acceptImport(e: any): any;
    _sheetClosedHandler(e: any): void;
    _certDetailsHandler(e: any): void;
    _headerTemplate(): any;
    _busyTemplate(): any;
    _unavailableTemplate(): any;
    _listTemplate(): any;
    _listItemTemplate(item: any, index: any, compatibility: any): any;
    _exportTemplate(): any;
    _certDetailsTemplate(): any;
    _toastsTemplate(): any;
    _clearDialogTemplate(): any;
    _renderList(): any;
    _renderAddCert(): any;
    _renderPage(): any;
    render(): any;
  }
}
